=begin
#JumpCloud APIs

#V1 & V2 versions of JumpCloud's API. The previous version of JumpCloud's API. This set of endpoints allows JumpCloud customers to manage commands, systems, & system users.

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require "uri"

module JCAPIv1
  class CommandTriggersApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Run a Command assigned to a webhook
    # 
    # @param triggername 
    # @param content_type 
    # @param accept 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def command_trigger_webhook_post(triggername, content_type, accept, opts = {})
      command_trigger_webhook_post_with_http_info(triggername, content_type, accept, opts)
      return nil
    end

    # Run a Command assigned to a webhook
    # 
    # @param triggername 
    # @param content_type 
    # @param accept 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def command_trigger_webhook_post_with_http_info(triggername, content_type, accept, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CommandTriggersApi.command_trigger_webhook_post ..."
      end
      # verify the required parameter 'triggername' is set
      fail ArgumentError, "Missing the required parameter 'triggername' when calling CommandTriggersApi.command_trigger_webhook_post" if triggername.nil?
      # verify the required parameter 'content_type' is set
      fail ArgumentError, "Missing the required parameter 'content_type' when calling CommandTriggersApi.command_trigger_webhook_post" if content_type.nil?
      # verify the required parameter 'accept' is set
      fail ArgumentError, "Missing the required parameter 'accept' when calling CommandTriggersApi.command_trigger_webhook_post" if accept.nil?
      # resource path
      local_var_path = "/command/trigger/{triggername}".sub('{format}','json').sub('{' + 'triggername' + '}', triggername.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json; charset=utf-8'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Content-Type'] = content_type
      header_params[:'Accept'] = accept

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['x-api-key']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CommandTriggersApi#command_trigger_webhook_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
